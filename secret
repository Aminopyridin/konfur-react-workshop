<Card style={{maxWidth: '600px', marginBottom: '10px'}}>
    <CardTitle title={'Вопрос № ' + this.props.index} />
    {this.props.image &&
        <CardMedia>
            <img src={this.props.image} />
        </CardMedia>
    }
    <CardText>
        <p style={{marginTop: 0}}>{this.props.text}</p>
        <RadioButtonGroup name='variants' onChange={(event, value) => this.props.onChange(value)}>
            {this.props.variants.map((item, index) =>
                <RadioButton
                    value={item.value}
                    label={item.label}
                    key={index}
                />
            )}
        </RadioButtonGroup>
    </CardText>
</Card>


--- Stories ---
import tigerImage from '../src/images/tiger.jpg';



    .add('default', () => (
       <MuiThemeProvider>
           <Question
               index={5}
               text='Какой вид тигров самый крупный?'
               variants={[
                   {value: 'amur', label: 'Амурский тигр'},
                   {value: 'sumatrae', label: 'Суматранский тигр'},
                   {value: 'indochn', label: 'Индокитайский тигр'},
               ]}
               onChange={action('onChange')}
           />
       </MuiThemeProvider>
   ))
   .add('with image', () => (
       <MuiThemeProvider>
           <Question
               index={5}
               image={tigerImage}
               text='Какой вид тигров самый крупный?'
               variants={[
                   {value: 'amur', label: 'Амурский тигр'},
                   {value: 'sumatrae', label: 'Суматранский тигр'},
                   {value: 'indochn', label: 'Индокитайский тигр'},
               ]}
               onChange={action('onChange')}
           />
       </MuiThemeProvider>
   ));

--- enzyme test ---
    it('должен вызывать событие onChange при клике по радио-кнопкам', () => {
        const onChange = sinon.spy();
        const wrapper = shallow(
            <Question
                onChange={onChange}
                variants={[{value: 'val1', label: 'text1'}, {value: 'val2', label: 'text2'}]}
            />
        );
        wrapper.find('RadioButtonGroup').simulate('change', 'val1');
        expect(onChange.callCount).to.equal(1);
    });
